<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.loveverse.dependencies</groupId>
    <artifactId>fast-common-dependencies</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>fast-common-dependencies</name>
    <description>所有公共模块的依赖管理</description>
    <!-- 即使引入 spring-boot-dependencies， 用到 spring 相关依赖还是手动写下依赖管理，方便知道用到那些库 -->
    <properties>
        <!-- 项目版本号 -->
        <revision>1.0.0</revision>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- spring 系列 -->
        <spring-boot.version>2.7.18</spring-boot.version>
        <spring-boot-data.version>2.6.9</spring-boot-data.version>
        <spring-cloud-ailbaba.version>2021.0.5.0</spring-cloud-ailbaba.version>
        <spring-cloud-loadbalancer.version>3.1.1</spring-cloud-loadbalancer.version>
        <spring-cloud-openfeign.version>2.2.6.RELEASE</spring-cloud-openfeign.version>
        <nacos-client.version>2.2.0</nacos-client.version>
        <!-- 数据库相关 -->
        <mysql-connector-java.version>8.0.33</mysql-connector-java.version>
        <!-- orm 模型相关 -->
        <mybatis-plus.version>3.5.4.1</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.10.1</mybatis-plus-generator.version>
        <freemarker.version>2.3.33</freemarker.version>
        <mybatis-enhance-actable.version>1.5.0.RELEASE</mybatis-enhance-actable.version>
        <druid.version>1.2.24</druid.version>
        <redisson.version>3.17.7</redisson.version>

        <jwt.version>0.7.0</jwt.version>
        <!-- 存储桶相关 -->
        <okhttp.version>4.9.0</okhttp.version>
        <minio.version>8.4.2</minio.version>

        <!-- 文档和工具 -->
        <knife4j.version>4.4.0</knife4j.version>
        <hutool.version>5.8.25</hutool.version>
        <lombok.version>1.18.36</lombok.version>

    </properties>

    <!-- 定义公共模块的依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- 封装的模块 -->
            <dependency>
                <groupId>com.loveverse.core</groupId>
                <artifactId>fast-common-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.loveverse.mybatis</groupId>
                <artifactId>fast-common-mybatis</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.loveverse.redis</groupId>
                <artifactId>fast-common-redis</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.loveverse.security</groupId>
                <artifactId>fast-common-security</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- spring 依赖管理 -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-dependencies</artifactId>-->
<!--                <version>${spring-boot.version}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->

            <!-- spring 系列 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <!--移除嵌入式tomcat插件，目前因为大部分前后端分离项目，大部分情况下可以不用-->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- 替换spring web 默认的 tomcat，相比默认 tomcat 性能和内存使用都是最优的 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- 这里可以不指定，会默认使用父项目的项目管理的依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- 日志相关 -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-log4j2</artifactId>-->
<!--                <version>${spring-boot.version}</version>-->
<!--            </dependency>-->
            <!--全局排除spring-boot-starter-logging内的所有依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>*</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--远程调用-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-openfeign.version}</version>
            </dependency>
            <!-- 配置中心来做配置管理，不能配置，否则需要手动增加版本号才能确保依赖正确 -->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; 注册中心来做服务发现 &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>-->
            <!--                &lt;!&ndash; 2020开始以不在维护，排除默认的 netflix-ribbon ，使用loadbalancer，2021.x已经移除，不需要手动排除 &ndash;&gt;-->
            <!--&lt;!&ndash;                <exclusions>&ndash;&gt;-->
            <!--&lt;!&ndash;                    <exclusion>&ndash;&gt;-->
            <!--&lt;!&ndash;                        <groupId>org.springframework.cloud</groupId>&ndash;&gt;-->
            <!--&lt;!&ndash;                        <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>&ndash;&gt;-->
            <!--&lt;!&ndash;                    </exclusion>&ndash;&gt;-->
            <!--&lt;!&ndash;                </exclusions>&ndash;&gt;-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-loadbalancer</artifactId>-->
            <!--                <version>${spring-cloud-loadbalancer.version}</version>-->
            <!--            </dependency>-->
            <!-- nacos2.x 服务部署需要开放新增端口 9848 -->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba.nacos</groupId>-->
            <!--                <artifactId>nacos-client</artifactId>-->
            <!--                <version>${nacos-client.version}</version>-->
            <!--            </dependency>-->

            <!-- 数据库系列 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-generator.version}</version>
            </dependency>
            <!-- orm 数据库表代码自动生成 -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <!-- 自动创建对象关联的数据表 -->
            <dependency>
                <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
                <artifactId>mybatis-enhance-actable</artifactId>
                <version>${mybatis-enhance-actable.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.baomidou</groupId>
                        <artifactId>mybatis-plus-annotation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--高性能数据库连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--redis：包含redis和redisson-->
<!--            <dependency>-->
<!--                <groupId>org.redisson</groupId>-->
<!--                <artifactId>redisson-spring-boot-starter</artifactId>-->
<!--                <version>${redisson.version}</version>-->
<!--            </dependency>-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <!-- 存储桶相关 -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!--knife4j:集Swagger3 和 OpenAPI3 为一体的增强解决方案-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-dependencies</artifactId>
                <version>${knife4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--tool-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>