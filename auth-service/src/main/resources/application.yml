server:
  port: 30200
  servlet:
    # 设置应用的上下文路径， 所有请求会以/auth-api开头
    context-path: /auth-api
spring:
  application:
    name: auth-service
  redis:
    host: 192.168.37.10
    port: 6379
  profiles:
    # dev 配置会打印错误信息到前端
    active: @profileActive@
  datasource:
    druid:
      # createDatabaseIfNotExist=true 不存在则创建，目前只有 mysql 支持
      url: jdbc:mysql://${DATABASE_IP:192.168.37.10}:${DATABASE_PORT:3306}/${DATABASE_NAME:auth_dev}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false&allowMultiQueries=true&createDatabaseIfNotExist=true
      db-type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: ${spring.datasource.username:root}
      password: ${spring.redis.password:123456}
      # 初始连接数
      initial-size: 5
      # 最小连接数
      min-idle: 15
      # 最大连接数
      max-active: 30
      # 超时时间(以秒数为单位)
      remove-abandoned-timeout: 180
      # 获取连接超时时间
      max-wait: 3000
      # 连接有效性检测时间
      time-between-eviction-runs-millis: 60000
      # 连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      # 连接在池中最大生存的时间
      max-evictable-idle-time-millis: 900000
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
      test-while-idle: true
      # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
      test-on-borrow: true
      # 是否在归还到池中前进行检验
      test-on-return: false
      # 检测连接是否有效
      validation-query: select 1
      # 配置监控统计
      webStatFilter:
        enabled: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        allow: localhost
      #        login-username: zrt
      #        login-password: qwe123#@!
      filter:
        stat:
          enabled: true
          # 记录慢SQL
          log-slow-sql: true
          slow-sql-millis: 1000
        #          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  cloud:
    nacos:
      config:
        #        server-addr: ${spring.cloud.nacos.server-addr:192.168.37.10:8848}
        #        file-extension: yaml
        #        namespace: 26b9f38c-4729-4d9a-9689-ce9c2692d764
        enabled: false
      # 禁用配置中心
      discovery:
        server-addr: ${spring.cloud.nacos.discovery.server-addr:192.168.37.10:8848}

mybatis-plus:
  configuration:
    #使用驼峰法映射属性
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: valid # 全局逻辑删除的实体字段名
      logic-delete-value: 'NULL' # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 1 # 逻辑未删除值(默认为 0)
  mapper-locations: classpath*:com/gitee/sunchenbin/mybatis/actable/mapping/*/*.xml

# 自动建表的工具配置
actable:
  table:
    # none: 不做处理
    # create: 会先将所有的表删除掉,重新构建表
    # update: 自动判断哪些表是新建的，哪些字段要修改类型等，哪些字段要删除，哪些字段要新增，该操作不会破坏原有数据。
    # add: 只做新增，比如新增表/新增字段/新增索引/新增唯一约束的功能，而不会去做修改和删除的操作
    auto: add
  model:
    pack: com.loveverse.auth.entity
  database:
    type: mysql
  # 全局配置，不需要每个地方再重新写前缀
  index:
    prefix: idx_
  unique:
    prefix: uni_
